问题描述：
给定两个序列：X= <x1， x2, ...,xm>, Y = <y1, y2, ..., yn>。要求出X和Y的最大长度公共子序列，子序列不要求连续。问题来源：AI
算法实现：
LCS.H:通过动态规划的方法找到不连续的子序列；

问题描述：
给定两个序列：X= <x1， x2, ...,xm>, Y = <y1, y2, ..., yn>。要求出X和Y的最大长度公共子序列，子序列要求连续。问题来源：http://www.cnblogs.com/dartagnan/archive/2011/10/06/2199764.html
算法实现：
通过匹配矩阵来实现：匹配的性质如下c[i][j] = c[i-1][j-1](X[i]=Y[j]), or 0(X[i]！=Y[j])
例如：X= 21232523311324, Y=312123223445
得到的矩阵如下：
   0 0 0 1 0 0 0 1 1 0 0 1 0 0 0
   0 1 0 0 0 0 0 0 0 2 1 0 0 0 0
   1 0 2 0 1 0 1 0 0 0 0 0 1 0 0
   0 2 0 0 0 0 0 0 0 1 1 0 0 0 0
   1 0 3 0 1 0 1 0 0 0 0 0 1 0 0
   0 0 0 4 0 0 0 2 1 0 0 1 0 0 0
   1 0 1 0 5 0 1 0 0 0 0 0 2 0 0
   1 0 1 0 1 0 1 0 0 0 0 0 1 0 0
   0 0 0 2 0 0 0 2 1 0 0 1 0 0 0
   0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
   0 0 0 0 0 0 0 0 0 0 0 0 0 1 0
   0 0 0 0 0 1 0 0 0 0 0 0 0 0 0
   0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
每次访问只用到一行的数据，因此可以简化，只用一行。但是对Y的遍历需要从后向前，因为后面的会用到上一层的前面的数据。
得到的算法实现：LCS_CONT.h

