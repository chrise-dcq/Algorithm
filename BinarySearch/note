这个算法演示二分查找算法以及它的各种变形形式
1. 正统的二分查找;
2. 含有重复元素的查找（最小下标和最大下标）;
3. 查找小于待查找元素的最大下标;
4. 查找大于待查找元素的最小下标;

2的思想（以查找最小下标为例）：
1. 若中间元素大于等于要查找的元素，则应该将e标记为中间元素，而不能是中间元素减1,因为减1后可能导致丢失查找结果。
2. 因为1的原因，有一个游标可能是不动的（当b = e - 1且(b+e)/2 == e时），此时若采用b<e或者b<=e的条件会导致死循环。因此循环条件必须是b<e-1

3的思想：
和普通的二分查找类似，中间元素大于等于待查找元素时，只需要设置high为low-1即可。
最后的返回需要注意，一般是返回high(或者low-1)，但是如果high==b-1即在第一个元素之前，则说明没找到，返回-1
